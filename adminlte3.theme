<?php

use Drupal\Core\Menu\MenuTreeParameters;
use Drupal\Core\Routing\RouteObjectInterface;
use Drupal\user\Entity\User;
use Drupal\field\Entity\FieldConfig;
use Drupal\Core\File\FileSystemInterface;
use Drupal\Core\File\FileUrlGeneratorInterface;

function adminlte3_preprocess_html(&$variables) {
  $variables['skin'] = theme_get_setting('skin');
}

function adminlte3_preprocess_page(&$variables) {
  $user = User::load(\Drupal::currentUser()->id());
  $variables['site_name'] = \Drupal::config('system.site')->get('name');
  $variables['site_url'] = \Drupal::request()->getHost();
  $picture = NULL;
  if ($user->hasField('user_picture')) {
    $picture = $user->get('user_picture')->entity;
    if ($picture) {
      $picture = $picture->createFileUrl();
    }
    else {
      $field = FieldConfig::loadByName('user', 'user', 'user_picture');
      $default_image = $field->getSetting('default_image');
      if ($default_image['uuid']) {
        $file = \Drupal::service('entity.repository')
          ->loadEntityByUuid('file', $default_image['uuid']);
//        $picture = file_create_url($file->getFileUri());
        $picture = $picture->createFileUrl($file->getFileUri());
      }
      else {
        $picture = "/themes/contrib/adminlte3/dist/img/avatar5.png";
      }
    }
  }
  $variables['user'] = [];
  $variables['user']['uid'] = $user->id();
  $variables['user']['name'] = $user->getAccountName();
  $variables['user']['picture'] = $picture;
  $variables['user']['created'] = $user->getCreatedtime();

  $logo_url = empty(theme_get_setting('logo.url')) ? '/themes/contrib/adminlte3/logo.svg' : theme_get_setting('logo.url');
  //  $variables['relative_logo_url'] = file_url_transform_relative(file_create_url($logo_url));

  // Get the absolute URL.
  $absolute_url = \Drupal::service('file_url_generator')
    ->generateAbsoluteString($logo_url);

  // Get the base URL of your Drupal site.
  $base_url = \Drupal::request()->getSchemeAndHttpHost();

  // Transform it to a relative URL.
  $variables['relative_logo_url'] = str_replace($base_url, '', $absolute_url);

  $logo_url = empty(theme_get_setting('logo.url')) ? '/themes/contrib/adminlte3/logo.svg' : theme_get_setting('logo.url');
  $variables['logo_url'] = $logo_url;
  $variables['image_path'] = '/themes/contrib/adminlte3/dist/img';
}

function adminlte3_preprocess_block(&$variables) {
  $variables['favicon'] = theme_get_setting('favicon.url');
}

function adminlte3_preprocess_menu(&$variables) {
  $icon_setting = explode("\n", theme_get_setting('menu_icons'));
  $icons = [];
  for ($i = 0; $i < sizeof($icon_setting); $i++) {
    $icon_setting[$i] = explode('|', $icon_setting[$i]);
    if (array_key_exists($i, $icon_setting) && sizeof($icon_setting[$i]) >= 2) {
      $icons[$icon_setting[$i][0]] = $icon_setting[$i][1];
    }
  }
  foreach ($variables['items'] as $id => $item) {
    $title = (string) $item['title'];
    if (array_key_exists($title, $icons) && $icons[$title]) {
      $variables['items'][$id]['icon'] = $icons[$title];
    }
  }
}

function adminlte3_form_system_theme_settings_alter(&$form, $form_state) {
  $form['skin'] = [
    '#type' => 'select',
    '#title' => t('adminlte3 Skin'),
    '#options' => [
      "black" => t('Black'),
      "black-light" => t('Black - Light'),
      "blue" => t('Blue'),
      "blue-light" => t('Blue - Light'),
      "green" => t('Green'),
      "green-light" => t('Green - Light'),
      "purple" => t('Purple'),
      "purple-light" => t('Purple - Light'),
      "red" => t('Red'),
      "red-light" => t('Red - Light'),
      "yellow" => t('Yellow'),
      "yellow-light" => t('Yellow - Light'),
    ],
    '#default_value' => theme_get_setting('skin'),
  ];
  $form['menu_icons'] = [
    '#type' => 'textarea',
    '#title' => t('Menu Icons'),
    '#default_value' => theme_get_setting('menu_icons'),
    '#description' => t("<a href='https://fortawesome.github.io/Font-Awesome/icons/' target='_blank'>Font Awesome</a> icon class with associated menu item. One per line. Format: Menu link title|class"),
  ];
}

function my_theme_preprocess_breadcrumb(&$variables): void {
  if ($variables['breadcrumb']) {
    $request = \Drupal::request();
    if ($route = $request->attributes->get(RouteObjectInterface::ROUTE_OBJECT)) {
      $variables['breadcrumb'][] = [
        'text' => \Drupal::service('title_resolver')
          ->getTitle($request, $route),
      ];
    }
  }
}

function adminlte3_preprocess_menu_local_action(&$variables) {
  $link = $variables['element']['#link'];
  $link += ['localized_options' => []];
  $link['localized_options']['attributes']['class'][] = 'btn';
  $link['localized_options']['attributes']['class'][] = 'btn-block';
  $link['localized_options']['attributes']['class'][] = 'btn-primary';
  $link['localized_options']['attributes']['class'][] = 'fas';
  $link['localized_options']['attributes']['class'][] = 'fa-plus';

  $variables['link'] = [
    '#type' => 'link',
    '#title' => ' ' . $link['title'],
    '#options' => $link['localized_options'],
    '#url' => $link['url'],
  ];
}

function adminlte3_theme_suggestions_region_alter(&$suggestions, &$variables) {
  if (in_array("region__content", $suggestions)) {
    $page_manager_page = \Drupal::routeMatch()
      ->getRouteObject()
      ->getDefault('page_manager_page');
    if ($page_manager_page) {
      $suggestions[] = 'region__page_manager_page_content';
      $suggestions[] = 'region__page_' . $page_manager_page . '_content';
    }
  }
}

function adminlte3_theme_suggestions_block_alter(&$suggestions, &$variables) {
  if (in_array("block__system_main_block", $suggestions)) {
    $page_manager_page = \Drupal::routeMatch()
      ->getRouteObject()
      ->getDefault('page_manager_page');
    if ($page_manager_page) {
      $suggestions[] = 'block__page_manager_page_system_main';
      $suggestions[] = 'block__page_' . $page_manager_page . '_system_main';
    }
  }
  else {
    if (array_key_exists('elements', $variables)
      && array_key_exists('#cache', $variables['elements'])
      && array_key_exists('keys', $variables['elements']['#cache'])
      && in_array("page_manager_block_display", $variables['elements']['#cache']['keys'])) {
      $suggestions[] = 'block__page_manager_page_block';
      $type = $variables['elements']['content']['#block_content'] ?
        $variables['elements']['content']['#block_content']->bundle()
        : $variables['elements']['#configuration']['id'];
      $suggestions[] = 'block__page_manager_page_' . $type;
    }
  }
}
